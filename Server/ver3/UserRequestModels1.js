var getData = {
    flowRequest:[{
      reqName:"GetSpreadsheetId",
      objectModel:SpreadsheetApp,
      method:"openById",
      arguments:["SpreadsheetId"]//SpreadsheetId
    },
    {
      reqName:"GetData",
      objectModel:"GetSpreadsheetId",
      method:'getRange',
      arguments:["NamedRange"],//example arguments ["Sheet1!A1:C10"]
      callBack:{
        method:'getValues', 
      },
    },
    {
      reqName:"SetOutput",
      objectModel:engine,
      method:'set',
      arguments:[{'result':'Success','output':''},"GetData","output"]  
    },
    {
      reqName:"StringifyMessage",
      objectModel:JSON,
      method:'stringify',
      arguments:["SetOutput"]
    },
    {
      reqName:'MessageToClient',
      objectModel:ContentService,
      method:'createTextOutput',
      arguments:["StringifyMessage"],
      callBack:{
        method:'setMimeType',
        arguments:[ContentService.MimeType.JSON]
      }
    }
    ]
  }
  var sendData = {
    flowRequest:[
      {//0
        reqName:"Sheet",
        objectModel:SpreadsheetApp,
        method:"openById",
        arguments:["SpreadsheetId"],
        callBack:{  method:"getSheetByName",arguments:["SheetName"]}
      },
      {//1
        reqName:'GetLastRow',
        objectModel:"Sheet",
        method:'getLastRow'
      },
      {//2
        reqName:'TheLastRow',
        objectModel:operate,
        method:'add',
        arguments:['GetLastRow',1]
      },
      {//3
        reqName:'SetData',
        objectModel:'Sheet',
        method:'getRange',
        arguments:['TheLastRow',1,"array.length","array.0.length"],//include row,column of data array
        callBack:{
            method:'setValues',
            arguments:["array"]//data
        }
      },
      {//4
        reqName:'SuccessfulAttempt',
        objectModel:ContentService,
        method:'createTextOutput',
        arguments:[JSON.stringify({'result':'Success','output':'Data Exported Successfully'})],
        callBack:{
          method:'setMimeType',
          arguments:[ContentService.MimeType.JSON]
        }
      }
    ]
  }
  var searchFolder = {
    flowRequest:[
      {
        reqName:'Add1stPart',
        objectModel:operate,
        method:'add',
        arguments:["title = '","SearchFolderName"]
      },
      {
        reqName:'SearchQuery',
        objectModel:operate,
        method:'add',
        arguments:['Add1stPart',"'"]
      },
      {
        reqName:'getFolder',
        objectModel:DriveApp,
        method:'searchFolders',
        arguments:['SearchQuery']
      },
      {
        reqName:"Unsuccessful Attempt",
        validate:{
          objectModel:'getFolder',
          method:'hasNext()',
          output:false
        },
        objectModel:ContentService,
        method:'createTextOutput',
        arguments:[JSON.stringify({'result':'Failed','output':"Couldn't find a folder as entered in search field."})],
        callBack:{
          method:'setMimeType',
          arguments:[ContentService.MimeType.JSON]
        },
        exitAfterExecutingRequest:true
      },
      {
        reqName:"parent",
        objectModel:'getFolder',
        method:'next'
      },
      {
        reqName:'jsonForFolder',
        objectModel:FileFolderInstance,
        method:'jsonForFolderV2',
        arguments:["parent",JSON.parse(JSON.stringify({}))]
      },
      {
        reqName:'SetOutput',
        objectModel:engine,
        method:'set',
        arguments:[{'result':'Failed','output':''},'jsonForFolder','output']
      },
      {
        reqName:"StringifyMessage",
        objectModel:JSON,
        method:'stringify',
        arguments:["SetOutput"]
      },
      {
        reqName:"Successful Attempt",
        objectModel:ContentService,
        method:'createTextOutput',
        arguments:["StringifyMessage"],
        callBack:{
          method:'setMimeType',
          arguments:[ContentService.MimeType.JSON]
        },
      }
    ]
  }
  
  
var SignUpRequestModel ={
    flowRequest:[
      {//0
        reqName:"Sheet",
        objectModel:SpreadsheetApp,
        method:"openById",
        arguments:["1ffczYrBikoQ49ijbqRHrAkZc0mJl4Ezb9fHfeocstmw"],
        callBack:{
            method:"getSheetByName",
            arguments:["registeredActorDatabase"]
        },
      },
      {//1
        reqName:'LastRow',
        objectModel:"Sheet",
        method:'getLastRow',
      },
      {//2
        reqName:"GetValues",
        objectModel:"Sheet",
        method:'getRange',
        arguments:[1,1,'LastRow'],
        callBack:{
              method:'getValues', 
        },
      },
      {//3
        reqName:"IndexOfUsername",
        objectModel:operate,
        method:'TwoD_OneD',
        arguments:["GetValues"],
        callBack:{
          method:'indexOf',
          arguments:["Username"]//Username
        }
      },
      {//4
        reqName:"RegisterData",
        validate:{
          objectModel:operate,
          method:'isGreaterThan',
          arguments:["IndexOfUsername",-1],
          output:false,
        },
        objectModel:"Sheet",
        method:'appendRow',
        arguments:[[]]//[,'Username','Password'] 
      },
      {//5
        reqName:"FailedAttempt",
        validate:{
          objectModel:operate,
          method:'isEqual',
          arguments:["RegisterData",null],
          output:true
        },
        objectModel:ContentService,
        method:'createTextOutput',
        arguments:[JSON.stringify({'result':'Failed','output':'User already exists'})],
        callBack:{
          method:'setMimeType',
          arguments:[ContentService.MimeType.JSON]
        },
        exitAfterExecutingRequest:true
      },
      {//6
        reqName:"SuccessfulAttempt",
        validate:{
          objectModel:operate,
          method:'isEqual',
          arguments:["RegisterData",null],
          output:true
        },
        objectModel:ContentService,
        method:'createTextOutput',
        arguments:[JSON.stringify({'result':'Success','output':'Registered Successfully'})],
        callBack:{
          method:'setMimeType',
          arguments:[ContentService.MimeType.JSON]
        }
      }
    ]
  }
  var SignInRequestModel = {
    flowRequest:[
      {//0
        reqName:"Sheet",
        objectModel:SpreadsheetApp,
        method:"openById",
        arguments:["1ffczYrBikoQ49ijbqRHrAkZc0mJl4Ezb9fHfeocstmw"],
        callBack:{
            method:"getSheetByName",
            arguments:["registeredActorDatabase"]
        },
      },
      {//1
        reqName:'LastRow',
        objectModel:"Sheet",
        method:'getLastRow',
      },
      {//2
        reqName:"GetValues",
        objectModel:"Sheet",
        method:'getRange',
        arguments:[1,1,'LastRow'],
        callBack:{
              method:'getValues', 
        },
      },
      {//3
        reqName:"UsernameList",
        objectModel:operate,
        method:'TwoD_OneD',
        arguments:["GetValues"],
        callBack:{
          method:'indexOf',
          arguments:["Username"]//Username
        }
      },
      {//4
        reqName:'WrongUsername',
        validate:{
          objectModel:operate,
          method:'isGreaterThan',
          arguments:["UsernameList",-1],
          output:false,
        },
        objectModel:ContentService,
        method:'createTextOutput',
        arguments:[JSON.stringify({'result':'Failed','output':"User doesn't exist. Sign Up now"})],
        callBack:{
          method:'setMimeType',
          arguments:[ContentService.MimeType.JSON]
        },
        exitAfterExecutingRequest:true
      },
      {//5
        reqName:"ExactRange",
        objectModel:operate,
        method:'add',
        arguments:["UsernameList", 1]
      },
      {//6
        reqName:"GetPassword",
        objectModel:"Sheet",
        method:"getRange",
        arguments:["ExactRange",2],
        callBack:{
            method:'getValue',
        }
      },
      {//7
        reqName:"SuccessfulAttempt",
        validate:{
           objectModel:operate,
            method:'isEqual',
            arguments:["GetPassword","Password"],//password need to be included
            output:true
        },
        objectModel:ContentService,
        method:'createTextOutput',
        arguments:[JSON.stringify({'result':'Success','output':'Correct Credentials! . Redirecting you to the application'})],
        callBack:{
          method:'setMimeType',
          arguments:[ContentService.MimeType.JSON]
        },
        exitAfterExecutingRequest:true     
      },
      {//8
        reqName:"UnsuccessfulAttempt",
        validate:{
           objectModel:operate,
            method:'isEqual',
            arguments:["GetPassword","Password"],//password need to be included
            output:false
        },
        objectModel:ContentService,
        method:'createTextOutput',
        arguments:[JSON.stringify({'result':'Failed','output':'Incorrect Password. Try Again'})],
        callBack:{
          method:'setMimeType',
          arguments:[ContentService.MimeType.JSON]
        },
        exitAfterExecutingRequest:true    
      }
    ]
  }
  var invoiceForm = {
    flowRequest:[
      {//0
        reqName:"GetSheet",
        objectModel:SpreadsheetApp,
        method:"openById",
        arguments:["1ffczYrBikoQ49ijbqRHrAkZc0mJl4Ezb9fHfeocstmw"],
        callBack:{  method:"getSheetByName",arguments:["invoiceForm"]}
      },
      {//1
        reqName:'GetLastRow',
        objectModel:"GetSheet",
        method:'getLastRow'
      },
      {//2
        reqName:'TheLastRow',
        objectModel:operate,
        method:'add',
        arguments:['GetLastRow',1]
      },
      {//3
        reqName:'SetData',
        objectModel:'GetSheet',
        method:'getRange',
        arguments:['TheLastRow',1,"array.length","array.0.length"],//include row,column of data array
        callBack:{
            method:'setValues',
            arguments:["array"]//data
        }
      },
      {//4
        reqName:'SuccessfulAttempt',
        objectModel:ContentService,
        method:'createTextOutput',
        arguments:[JSON.stringify({'result':'Success','output':'Invoice Registered Successfully'})],
        callBack:{
          method:'setMimeType',
          arguments:[ContentService.MimeType.JSON]
        }
      }
    ]
  }